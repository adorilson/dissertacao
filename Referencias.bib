% This file was created with JabRef 2.10b2.
% Encoding: UTF8


@Book{Nascimento2014,
  Title                    = {Modelo de Monografia},
  Author                   = {Diego Nascimento},
  Publisher                = {Instituto Federal do Rio Grande do Norte},
  Year                     = {2014}
}

@ONLINE{Lhamas2014,
  title         = {{Worldwide Smartphone Market Grows 28.6\% Year Over Year in the First Quarter of 2014, According to IDC}},
  year          = {2014},
  address       = {http://www.idc.com/getdoc.jsp?containerId=prUS24823414},
  urlaccessdate = {04 aug. 2014},
  author        = {R. Lhamas and M. Chau and M. Shirer}
}

@ONLINE{jim2014,
  title         = {{The iPhone 6 Had Better Be Amazing And Cheap, Because Apple Is Losing The War To Android}},
  year          = {2014},
  address       = {http://www.businessinsider.com/iphone-v-android-market-share-2014-5},
  urlaccessdate = {04 jun. 2016},
  author        = {Jim Edwards}
}

@INPROCEEDINGS{Gronli2014, 
author={T. M. Gronli and J. Hansen and G. Ghinea and M. Younas}, 
booktitle={2014 IEEE 28th International Conference on Advanced Information Networking and Applications}, 
title={Mobile Application Platform Heterogeneity: Android vs Windows Phone vs iOS vs Firefox OS}, 
year={2014}, 
pages={635-641}, 
keywords={Internet;innovation management;mobile computing;operating systems (computers);smart phones;software engineering;Android phone;Firefox OS;Gartner Group;Web technologies;Windows phone;iOS;mobile application platform heterogeneity;operating systems;smartphones;software-led innovation;tic-tac-toe game;Hardware;Java;Mobile communication;Operating systems;Smart phones;Android;Cross Platform Development;Firefox OS;Mobile Computing;Mobile Development Environment;Native Apps;Web Apps;Windows Phone;iOS}, 
doi={10.1109/AINA.2014.78}, 
ISSN={1550-445X}, 
month={May},}

@phdthesis{Alves2007,
abstract = {Linha de Produtos de Software (LPS) {\'{e}} uma aborgadem promissora para o desenvolvimento de um conjunto de produtos focados em um segmento de mercado e desenvolvidos a partir de um conjunto comum de artefatos. Poss{\'{i}}veis benef{\'{i}}cios incluem reuso em larga escala e significativa melhoria em produtividade. Um problema-chave associado, no entanto, {\'{e}} o tratamento de estrat{\'{e}}gias de implanta{\c{c}}{\~{a}}o, em que uma organiza{\c{c}}{\~{a}}o decide iniciar uma LPS a partir do zero, fazer bootstrap de produtos existentes em uma LPS, ou evoluir uma LPS. Em particular, no n{\'{i}}vel de implementa{\c{c}}{\~{a}}o e de modelo de features, m{\'{e}}todos de desenvolvimento carecem de apoio adequado para extra{\c{c}}{\~{a}}o e evolu{\c{c}}{\~{a}}o de LPSs. Neste contexto, apresentamos um m{\'{e}}todo original provendo diretrizes concretas para extra{\c{c}}{\~{a}}o e evolu{\c{c}}{\~{a}}o de LPSs no n{\'{i}}vel de implementa{\c{c}}{\~{a}}o e de modelo de features, nos quais proporciona reuso e seguran{\c{c}}a. O m{\'{e}}todo primeiro faz o bootstrap da LPS e ent{\~{a}}o a evolui com uma abordagem reativa. O m{\'{e}}todo se baseia em uma cole{\c{c}}{\~{a}}o de refatoramentos tanto na implementa{\c{c}}{\~{a}}o (refatoramentos orientados a aspectos) como no modelo de features. O m{\'{e}}todo foi avaliado no dom{\'{i}}nio altamente vari{\'{a}}vel de jogos m{\'{o}}veis.},
author = {Alves, Vander Ramos},
file = {:home/adorilson/Dropbox/Mendeley Desktop/2007/Alves - 2007 - Implementing Software Product Line Adoption Strategies.pdf:pdf},
keywords = {Linha de produtos de software,aspects,design patterns,estrat{\'{e}}gias de implanta{\c{c}}{\~{a}}o,feature models,j2me,jogos m{\'{o}}veis.,modelo de features,programa{\c{c}}{\~{a}}o orientada a aspectos,software product line,software reuse},
mendeley-tags = {aspects,design patterns,feature models,j2me,software product line,software reuse},
pages = {178},
school = {Universidade Federal de Pernambuco},
title = {{Implementing Software Product Line Adoption Strategies}},
type = {PhD},
url = {http://twiki.cin.ufpe.br/twiki/bin/view/SPG/GenteAreaThesis http://twiki.cin.ufpe.br/twiki/pub/SPG/GenteAreaThesis/PhD-thesis-Vander-Alves.pdf},
year = {2007}
}

@article{Alves2005,
  author = {Vander Alves},
  title = {Identifying Variations in Mobile Devices},
  journal = {Journal of Object Technology},
  volume = {4},
  number = {3},
  issn = {1660-1769},
  year = {2005},
  month = apr,
  editor = {Karine Arnout and Douglas R. Dechow and Andreas Pleuss and Matthew J. Rutherford and Denis Shestakov and Daniel von Dincklage},
  note = {GPCE Young Researchers Workshop 2004},
  pages = {51-56},
  doi = {10.5381/jot.2005.4.3.a7},
  url = {http://www.jot.fm/contents/issue\_2005\_04/article7.html}
}

@inproceedings{Dehlinger2011,
abstract = {The rapid proliferation and ubiquity of mobile, smart devices in the consumer market has forced the software engineering community to quickly adapt development approaches conscious of the novel capabilities of mobile applications. The combination of computing power, access to novel onboard sensors and ease of application transfer to market has made mobile devices the new computing platform for businesses and independent developers. However, the growth of this new computing platform has outpaced the software engineering work tailored to mobile application development. This position paper looks at four significant challenges to mobile application software engineering and provides a discussion of possible research directions, drawing from existing areas of software engineering, that should be further examined. Specifically, we examine the challenge of: 1) creating user interfaces accessible to differentlyabled users; 2) handling the complexity of providing applications across multiple mobile platforms; 3) designing context-aware aware applications; and, 4) specifying requirements uncertainty},
author = {Dehlinger, Josh and Dixon, Jeremy},
booktitle = {Workshop on Mobile Software Engineering},
file = {:home/adorilson/Dropbox/Mendeley Desktop/2011/Dehlinger, Dixon - 2011 - Mobile Application Software Engineering Challenges and Research Directions.pdf:pdf},
keywords = {mobile,software product line},
mendeley-tags = {mobile,software product line},
title = {{Mobile Application Software Engineering: Challenges and Research Directions}},
url = {http://www.mobileseworkshop.org/papers/7{\_}Dehlinger{\_}Dixon.pdf},
year = {2011}
}

@inproceedings{Linares-Vasquez2013,
abstract = {During the recent years, themarket of mobile software appli- cations (apps) has maintained an impressive upward trajec- tory. Many small and large software development companies invest considerable resources to target available opportuni- ties. As of today, the markets for such devices feature over 850K+ apps for Android and 900K+ for iOS. Availability, cost, functionality, and usability are just some factors that determine the success or lack of success for a given app. Among the other factors, reliability is an important criteria: users easily get frustrated by repeated failures, crashes, and other bugs; hence, abandoning some apps in favor of others. This paper reports a study analyzing how the fault- and change-proneness of APIs used by 7,097 (free) Android apps relates to applications' lack of success, estimated from user ratings. Results of this study provide important insights into a crucial issue: making heavy use of fault- and change-prone APIs can negatively impact the success of these apps.},
address = {New York, New York, USA},
annote = {Lido em 02-08-2014},
author = {Linares-V{\'{a}}squez, Mario and Bavota, Gabriele and Bernal-C{\'{a}}rdenas, Carlos and {Di Penta}, Massimiliano and Oliveto, Rocco and Poshyvanyk, Denys},
booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering - ESEC/FSE 2013},
doi = {10.1145/2491411.2491428},
file = {:home/adorilson/Copy/Mendeley Desktop/2013/Linares-V{\'{a}}squez et al. - 2013 - API change and fault proneness a threat to the success of Android apps.pdf:pdf},
isbn = {9781450322379},
keywords = {API changes,Android,Empirical Studies,Mining Software Repositories,android,mestrado,sugarloaf 2014,ufrn},
mendeley-tags = {android,mestrado,sugarloaf 2014,ufrn},
month = {aug},
pages = {477},
publisher = {ACM Press},
title = {{API change and fault proneness: a threat to the success of Android apps}},
url = {http://dl.acm.org/citation.cfm?id=2491411.2491428},
year = {2013}
}

@ONLINE{GuiaAndroid,
  title         = {{Android Developers}},
  year          = {2016},
  address       = {https://developer.android.com/index.html},
  urlaccessdate = {04 jun. 2016},
  author        = {Android}
}

@ONLINE{Dashboard,
  title         = {{Android Developers}},
  year          = {2016},
  address       = {https://developer.android.com/about/dashboards/index.html},
  urlaccessdate = {04 ago. 2016},
  author        = {Android}
}

@ONLINE{oraclejme,
  title         = {{JAVA PLATFORM, MICRO EDITION (JAVA ME)}},
  year          = {2016},
  address       = {http://www.oracle.com/technetwork/java/embedded/javame/overview/javameoverview-2183586.html},
  urlaccessdate = {04 jun. 2016},
  author        = {Oracle}
}


@phdthesis{FalvoJunior2015,
abstract = {A populariza{\c{c}}{\~{a}}o dos dispositivos m{\'{o}}veis em todas as camadas sociais tem motivado o desenvolvimento de aplica{\c{c}}{\~{o}}es educacionais m{\'{o}}veis, denominadas aplica{\c{c}}{\~{o}}es de m-learning. Neste cen{\'{a}}rio, as aplica{\c{c}}{\~{o}}es existentes, mesmo possuindo diversos benef{\'{i}}cios e facilidades no que diz respeito ao ensino e aprendizagem, apresentam problemas e desafios relacionados, sobretudo no que se refere ao desenvolvimento, reuso e padroniza{\c{c}}{\~{a}}o arquitetural. Por outro lado, na vertente do reuso de software, percebe-se uma crescente ado{\c{c}}{\~{a}}o do conceito de Linha de Produtos de Software (LPS). Esse paradigma possibilita {\`{a}}s organiza{\c{c}}{\~{o}}es explorar as similaridades e variabilidades de seus produtos, aumentando a reutiliza{\c{c}}{\~{a}}o de artefatos e, como consequ{\^{e}}ncia, diminuindo custos e tempo de desenvolvimento. Neste trabalho {\'{e}} apresentada uma LPS voltada ao dom{\'{i}}nio das aplica{\c{c}}{\~{o}}es de m-learning, denominada M-SPLearning. A proposi{\c{c}}{\~{a}}o da M-SPLearning envolveu desde o estudo inicial para a obten{\c{c}}{\~{a}}o de uma an{\'{a}}lise de dom{\'{i}}nio efetiva, at{\'{e}} a implementa{\c{c}}{\~{a}}o dos componentes previamente analisados. A LPS concebida teve seus respectivos produtos avaliados experimentalmente no cen{\'{a}}rio industrial, fornecendo evid{\^{e}}ncias de que sua utiliza{\c{c}}{\~{a}}o pode acelerar o time-to-market de produtos de m-learning, com um n{\'{u}}mero reduzido de defeitos.},
author = {{Falvo Junior}, Venilton},
file = {:home/adorilson/Copy/Mendeley Desktop/2015/Falvo Junior - 2015 - Estudo e defini{\c{c}}{\~{a}}o de uma linha de produtos de software para o desenvolvimento de aplica{\c{c}}{\~{o}}es educacionais m{\'{o}}v.pdf:pdf},
keywords = {Aprendizagem M{\'{o}}vel,Avalia{\c{c}}{\~{a}}o Experimental,Gerenciamento de Variabilidades,Linha de Produtos de Software,SOA,android,mestrado,software product line},
mendeley-tags = {android,mestrado,software product line},
pages = {106},
school = {Universidade de S{\~{a}}o Paulo},
title = {{Estudo e defini{\c{c}}{\~{a}}o de uma linha de produtos de software para o desenvolvimento de aplica{\c{c}}{\~{o}}es educacionais m{\'{o}}veis}},
url = {http://www.teses.usp.br/teses/disponiveis/55/55134/tde-27112015-090120/pt-br.php},
year = {2015}
}

@inbook{Krueger2002,
address = {Berlin, Heidelberg},
author = {Krueger, CharlesW.},
booktitle = {Software Product-Family Engineering: 4th International Workshop, PFE 2001 Bilbao, Spain, October 3--5, 2001 Revised Papers},
doi = {10.1007/3-540-47833-7_25},
editor = {van der Linden, Frank},
isbn = {978-3-540-47833-1},
pages = {282--293},
publisher = {Springer Berlin Heidelberg},
title = {{Easing the Transition to Software Mass Customization}},
url = {http://dx.doi.org/10.1007/3-540-47833-7{\_}25},
year = {2002}
}

@article{Cirilo2012,
abstract = {In this work, the authors describe their experience on the adoption of a model-driven product derivation tool to help variability management and automatic product instantiation of a mobile product line, called MobileMedia. MobileMedia is a software product line (SPL) that provides support to manage (create, delete, visualize, play, send) different medias (photo, music, and video) on mobile devices. It was previously implemented as a Java Micro Edition (JME) application, in two different versions: (i) the first one uses conditional compilation implementation mechanisms to modularize their respective variations; and (ii) the second one adopts aspect-oriented programming, specifically AspectJ language, to explore a better modularization and separation of their respective variations. In this chapter, the authors illustrate how GenArch, a model-driven product derivation tool developed at the authors' research labs, can be used to automatically produce the different applications of both versions of MobileMedia SPL. The chapter discusses the impact of using these two different modularization techniques (conditional compilation and aspect-oriented programming) for the product derivation process by emphasizing their benefits and drawbacks and also showing the particular model-driven techniques used to better provide their instantiation.},
author = {Cirilo, Elder and Kulesza, Uira and Torres, M{\'{a}}rio and Lucena, Carlos},
doi = {10.4018/978-1-61520-655-1},
editor = {Alencar, Paulo and Cowan, Donald},
file = {:home/adorilson/Dropbox/Mendeley Desktop/2012/Cirilo et al. - 2012 - Experience with Automatic Product Derivation of Mobile Applications Using Model-Driven Techniques.pdf:pdf},
isbn = {9781615206551},
journal = {Handbook of Research on Mobile Software Engineering},
keywords = {Computer Engineering,Computer Science and Information Technology,Information Science Reference,Systems {\&} Software Design,mestrado,mobile,software product line,sugarloaf 2014},
mendeley-tags = {mestrado,mobile,software product line,sugarloaf 2014},
month = {may},
pages = {113--123},
publisher = {IGI Global},
title = {{Experience with Automatic Product Derivation of Mobile Applications Using Model-Driven Techniques}},
url = {http://services.igi-global.com/resolvedoi/resolve.aspx?doi=10.4018/978-1-61520-655-1},
volume = {I},
year = {2012}
}

@article{Mojica2014,
abstract = {Mobile apps are software products developed to run on mobile devices. In less than five years, the number of apps has grown exponentially to more than one million in the largest mobile app stores. One possible explanation for this exponential growth could be the adoption of well-proven software engineering practices, in particular of software reuse, despite the often conjectured lack of training of mobile app developers. We performed a study on hundreds of thousands of Android apps across 30 different categories to analyze software reuse in the Google Play app store. We found the following about three kinds of reuse: (a) 18.75{\%} of Android app classes inherit from a base class in the Android API, and 35.78{\%} of the classes inherit from a domain-specific base class; (b) 84.23{\%} of classes across all categories of mobile apps occur in two or more apps; (c) 17,109 mobile apps were a direct copy of another app. Overall, app developers perform substantial software reuse, which means that they may benefit from increased productivity, yet at the same time become more dependent on the quality of the reused apps and libraries. software},
annote = {Abstract:
Mobile apps are software products developed to run on mobile devices. In less than five years, the
number of apps has grown exponentially to more than one million in the largest mobile app stores.
One possible explanation for this exponential growth could be the adoption of well-proven software
engineering practices, in particular of software reuse, despite the often conjectured lack of training of
mobile app developers. We performed a study on hundreds of thousands of Android apps across 30
different categories to analyze software reuse in the Google Play app store. We found the following
about three kinds of reuse: (a) 18.75{\%} of Android app classes inherit from a base class in the Android
API, and 35.78{\%} of the classes inherit from a domain-specific base class; (b) 84.23{\%} of classes across
all categories of mobile apps occur in two or more apps; (c) 17,109 mobile apps were a direct copy
of another app. Overall, app developers perform substantial software reuse, which means that they may
benefit from increased productivity, yet at the same time become more dependent on the quality of the
reused apps and libraries.},
author = {Mojica, Israel J. and Adams, Bram and Nagappan, Meiyappan and Dienst, Steffen and Berger, Thorsten and Hassan, Ahmed E.},
doi = {10.1109/MS.2013.142},
file = {:home/adorilson/Copy/Mendeley Desktop/2014/Mojica et al. - 2014 - A Large Scale Empirical Study on Software Reuse in Mobile Apps.pdf:pdf},
journal = {Software, IEEE},
keywords = {Android,android,mestrado,mobile apps,software product line,software reuse,sugarloaf 2014,ufrn},
mendeley-tags = {android,mestrado,software product line,sugarloaf 2014,ufrn},
number = {2},
pages = {78--86},
title = {{A Large Scale Empirical Study on Software Reuse in Mobile Apps}},
url = {http://sail.cs.queensu.ca/publications/pubs/paper-45.pdf},
volume = {31},
year = {2014}
}

@article{Laguna2011,
abstract = {Life quality of dependent persons is associated with personal autonomy and mobility, between others parameters. But the development of mobile applications for autonomy support is a challenging activity. Some of the challenges are the diversity of target platforms (including display sizes, keypads or tactile screens variations in each platform), and the limits in memory size, processing resources, battery duration, etc. For these reasons, a software product line (SPL) approach can provide a considerable advantage in mobile application development. This article presents a SPL that makes possible the remote monitoring of dependent people to facilitate their autonomy. Wireless sensors allow real-time information such as heart rate or oxygen saturation level to be controlled. Risk situations, including fall detection, critical in elderly persons who live alone, can also be detected. In the SPL approach, only the required features are incorporated in each concrete product (avoiding the device overload with a resource-costly extensive solution). The article presents an Android/Symbian based SPL architecture, using Bluetooth wireless sensors connected to a Smartphone. The mobile system is able to detect alarm situations and is remotely connected to a central system, aimed for its use in elderly residences.},
author = {Laguna, MA and Finat, J},
file = {:home/adorilson/Dropbox/Mendeley Desktop/2011/Laguna, Finat - 2011 - Remote monitoring and fall detection multiplatform java based mobile applications.pdf:pdf},
journal = {International Workshop on Ambient Assisted Living},
keywords = {android,mestrado,software product line},
mendeley-tags = {android,mestrado,software product line},
pages = {9},
title = {{Remote monitoring and fall detection: multiplatform java based mobile applications}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-21303-8{\_}1},
year = {2011}
}

@inproceedings{Pavlic2013,
abstract = {In this paper we present the challenges during the simultaneous development of multiple mobile application versions with different sets of functionalities. Some of them are core, the other optional, and the third alternative. One of the indicated appropriate solutions is the approach of software product lines. In this paper we presents practical experiences during the product line implementation in the case of mobile applications for the Android operating system. It has at least six to eight different versions simultaneously available. Among others, these are freely available version, paid version, development, test and demonstration version. We also offer certain versions for the BlackBerry phones, some mobile application components share common functionalities 1 with a portal server},
author = {Pavlic, Luka},
booktitle = {Second Workshop on Software Quality Analysis, Monitoring, Improvement and Applications},
file = {:home/adorilson/Copy/Mendeley Desktop/2013/Pavlic - 2013 - The mobile product line.pdf:pdf},
issn = {16130073},
keywords = {Android,Mobile applications,Mobile product lines,Software product lines,android,software product line,variability},
mendeley-tags = {android,software product line,variability},
pages = {63--69},
title = {{The mobile product line}},
url = {http://ceur-ws.org/Vol-1053/sqamia2013paper8.pdf},
volume = {1053},
year = {2013}
}

@article{Berger2014,
author = {Berger, Thorsten and Pfeiffer, Rolf Helge and Tartler, Reinhard and Dienst, Steffen and Czarnecki,
Krzysztof and Wasowski, Andrzej and She, Steven},
doi = {10.1016/j.infsof.2014.05.005},
file = {:home/adorilson/Dropbox/Mendeley Desktop/2014/Berger et al. - 2014 - Variability mechanisms in software ecosystems.pdf:pdf},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {Empirical software engineering,Mining software repositories,Software ecosystems,Software product lines,Variability management,android,mestrado,variability},
mendeley-tags = {android,mestrado,variability},
pages = {1520--1535},
title = {{Variability mechanisms in software ecosystems}},
volume = {56},
year = {2014}
}

@article{Campos2015,
abstract = {This work presents an exploratory study whose goal was to investigate the architectural characteristics of Android's applications. We selected twelve popular and open-source applications available on the official Android's store for analysing. Then, we applied techniques of the reverse engineering to each target application in order to investigate three main aspects: (i) architecture of each application; use of the (ii) design patterns; and (iii) expecting handling policies. Support tools were used in order to identify dependencies between architectural components implemented in each target application, and to graphically present those dependencies. Then, based on this analysing, we present a qualitative analysis carried out on the extracted architectures. One of the outcomes consistently detected during this study was an overview of the main architectural choices that have been adopted by Android developers, resulting on formulation of a preliminary conceptual architecture for Android applications.},
author = {Campos, Edmilson and Kulesza, Uir{\'{a}} and Coelho, Roberta and Bonif{\'{a}}cio, Rodrigo and Mariano, Lucas},
doi = {10.5220/0005398902010211},
file = {:home/adorilson/Copy/Mendeley Desktop/2015/Campos et al. - 2015 - Unveiling the Architecture and Design of Android Applications - An Exploratory Study.pdf:pdf},
isbn = {978-989-758-096-3},
journal = {Proceedings of the 17th International Conference on Enterprise Information Systems},
keywords = {android,design patterns,mestrado,software product line},
mendeley-tags = {android,design patterns,mestrado,software product line},
pages = {201--211},
title = {{Unveiling the Architecture and Design of Android Applications - An Exploratory Study}},
url = {http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0005398902010211},
year = {2015}
}

@book{Clements2001,
title = {Software Product Lines: Practices and Patterns},
author={Paul Clements and Linda Northrop},
year={2001},
publisher={Addison-Wesley Professional},
}

@book{Gamma1994,
  title={Design Patterns: Elements of Reusable Object-Oriented Software (Adobe Reader)},
  author={Gamma, E. and Helm, R. and Johnson, R. and Vlissides, J.},
  isbn={9780321700698},
  url={https://books.google.com.br/books?id=6oHuKQe3TjQC},
  year={1994},
  publisher={Pearson Education}
}

@incollection{Preuveneers2004,
abstract = {To realise an Ambient Intelligence environment, it is paramount that applications can dispose of information about the context in which they operate, preferably in a very general manner. For this purpose various types of information should be assembled to form a representation of the context of the device on which aforementioned applications run. To allow interoperability in an Ambient Intelligence environment, it is necessary that the context terminology is commonly understood by all participating devices. In this paper we propose an adaptable and extensible context ontology for creating context-aware computing infrastructures, ranging from small embedded devices to high-end service platforms. The ontology has been designed to solve several key challenges in Ambient Intelligence, such as application adaptation, automatic code generation and code mobility, and generation of device specific user interfaces.},
address = {Berlin, Heidelberg},
author = {Preuveneers, Davy and den Bergh, Jan Van and Wagelaar, Dennis and Georges, Andy and Rigole, Peter and Clerckx, Tim and Berbers, Yolande and Coninx, Karin and Jonckers, Viviane and Bosschere, Koen De},
booktitle = {Ambient Intelligence},
doi = {10.1007/978-3-540-30473-9_15},
editor = {Markopoulos, Panos and Eggen, Berry and Aarts, Emile and Crowley, James L.},
file = {:home/adorilson/Dropbox/Mendeley Desktop/2004/Preuveneers et al. - 2004 - Towards an Extensible Context Ontology for Ambient Intelligence.pdf:pdf},
isbn = {978-3-540-23721-1},
keywords = {mestrado,sugarloaf 2014,ufrn},
mendeley-tags = {mestrado,sugarloaf 2014,ufrn},
pages = {148--159},
publisher = {Springer Berlin Heidelberg},
series = {Lecture Notes in Computer Science},
title = {{Towards an Extensible Context Ontology for Ambient Intelligence}},
url = {http://link.springer.com/chapter/10.1007/978-3-540-30473-9{\_}15},
volume = {3295},
year = {2004}
}

@article{Gacek2001,
 author = {Gacek, Critina and Anastasopoules, Michalis},
 title = {Implementing Product Line Variabilities},
 journal = {SIGSOFT Softw. Eng. Notes},
 issue_date = {May 2001},
 volume = {26},
 number = {3},
 month = may,
 year = {2001},
 issn = {0163-5948},
 pages = {109--117},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/379377.375269},
 doi = {10.1145/379377.375269},
 acmid = {375269},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {implementation approaches, implementing variabilities, product line variability, software product lines, traceability},
} 

@phdthesis{Coplien1999,
author = {Coplien, JO},
file = {:home/adorilson/Copy/Mendeley Desktop/1999/Coplien - 1999 - Multi-Paradigm Design.pdf:pdf},
isbn = {0-201-82467},
pages = {276},
school = {VRIJE UNIVERSITEIT BRUSSEL},
title = {{Multi-Paradigm Design}},
url = {http://toritama.cin.ufpe.br/twiki/pub/TAES/LPS200802/couplien-phd-thesis.pdf},
year = {1999}
}

@article{Batory2004,
  title={Scaling step-wise refinement},
  author={Batory, Don and Sarvela, Jacob Neal and Rauschmayer, Axel},
  journal={IEEE Transactions on Software Engineering},
  volume={30},
  number={6},
  pages={355-371},
  year={2004},
  publisher={IEEE}
}

@inproceedings{Liu2006,
  title={Feature oriented refactoring of legacy applications},
  author={Liu, Jia and Batory, Don and Lengauer, Christian},
  booktitle={Proceedings of the 28th International Conference on Software Engineering},
  pages={112-121},
  year={2006},
  organization={ACM}
}

@inproceedings{Lopez2005,
  title={Evaluating support for features in advanced modularization technologies},
  author={Lopez-Herrejon, Roberto E and Batory, Don and Cook, William},
  booktitle={European Conference on Object-Oriented Programming},
  pages={169-194},
  year={2005},
  organization={Springer}
}

@inproceedings{mezini2004,
  title={Variability management with feature-oriented programming and aspects},
  author={Mezini, Mira and Ostermann, Klaus},
  booktitle={ACM SIGSOFT Software Engineering Notes},
  volume={29},
  number={6},
  pages={127-136},
  year={2004},
  organization={ACM}
}

